version: 2.1

orbs:
  docker: circleci/docker@0.5.20
  jahia-modules-orb: jahia/jahia-modules-orb@dev:alpha

parameters:
  PRIMARY_RELEASE_BRANCH:
    type: string
    default: "main"

jobs:
  build_publish:
    docker:
      - image: cimg/openjdk:8.0.275
    parameters:
      # Milestone used in Testrail
      from_image:
        type: string
        default: cimg/openjdk:8.0.275
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
      - run:
          name: Creating tag from CircleCI image
          command: |
            echo "export FROM_IMAGE=<< parameters.from_image >>" >> $BASH_ENV
            echo "export JAHIA_TAG=$(echo << parameters.from_image >> | sed -r 's/[:\/]+/_/g')" >> $BASH_ENV
      - run:
          name: Printing CircleCI image tags
          command: |
            echo "FROM_IMAGE=${FROM_IMAGE}"
            echo "JAHIA_TAG=${JAHIA_TAG}"
      - run:
          name: Build and push Docker image
          command: |
            docker build -t jahia/cimg-mvn-cache:$JAHIA_TAG \
            --build-arg FROM_IMAGE="$FROM_IMAGE" \
            --build-arg GITHUB_API_TOKEN="$GITHUB_API_TOKEN" .

            if [[ "${CIRCLE_BRANCH}" == "<< pipeline.parameters.PRIMARY_RELEASE_BRANCH >>" ]]; then
              docker push jahia/cimg-mvn-cache:$JAHIA_TAG
            else
              echo "Not in the main branch, skipping docker push"
            fi
workflows:
  version: 2
  on-code-change:
    jobs:
      - build_publish:
          context: QA_ENVIRONMENT
          from_image: 'cimg/openjdk:8.0.275'

  # The objective of nightly runs is to ensure keep up to date the artifacts
  # for the projects listed in the Dockerfile
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build_publish:
          context: QA_ENVIRONMENT
          from_image: 'cimg/openjdk:8.0.275'

